var courseId;
var config = {
  startOnMonday: false
}
var calFactory = function(){
  var monthDays = [31,28,31,30,31,30,31,31,30,31,30,31];
  var cal = {
    init: function(){
      this.dateArr = [];
      this.today = new Date();
      this.getClasses();
      return this;
    },

    getClasses: function(){
      var self = this;
       courseId = $('#render-cal').attr('data-course-id');
      $.ajax({
        method: "GET",
        url: '/api/class_dates/' + courseId,
        success: function(data){
          cal.classes = data.classes;
          console.log(cal.classes);
          cal.createMonth(self.today.getMonth(), self.today.getFullYear());
        },
        error: function(err){
          console.log(err);
        }
      })
    },

    createMonth: function(month, year){
      this.dateArr = [];
      this.firstDay = new Date(year, month, 1, 0, 0, 0, 0);
      var startDayOfWeek = this.firstDay.getDay();
      if (config.startOnMonday){
        startDayOfWeek = startDayOfWeek === 0 ? 7 : startDayOfWeek - 1;
      }
      for(var i = 0; i < startDayOfWeek ; i++){
        this.dateArr.push("");
      }
      for (var i=1; i<=monthDays[this.firstDay.getMonth()]; i++){
        this.dateArr.push(i);
      }
      //http://stackoverflow.com/questions/16353211/check-if-year-is-leap-year-in-javascript
      if (this.firstDay.getMonth() == 1 && ((this.firstDay.getFullYear % 4 == 0) && (this.firstDay.getFullYear % 100 != 0)) || (this.firstDay.getFullYear % 400 == 0)){
        this.dateArr.push(29);
      }
      this.dateArr = _.chunk(this.dateArr, 7);
      while (this.dateArr[this.dateArr.length -1].length < 7){
        this.dateArr[this.dateArr.length-1].push("");
      }

      this.renderCal();

      return this;
    },
    renderCal: function(){
        var self = this;
        $('.class-results').empty()
        var $calContainer = $('#render-cal').empty();
        var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        var daysOfWeek = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        if (config.startOnMonday){
          daysOfWeek.push(daysOfWeek.shift());
        }
        var $table = $('<table>',{
            class: "cal"
          })
          .appendTo($calContainer);
        var $caption = $('<caption>',{
            class: "cal-month"
          })
          .appendTo($table);
        var $prevMonth = $('<div>',{
            class: "month-option"
          })
          .appendTo($caption)
          .click(function(e){
            self.createMonth(self.firstDay.getUTCMonth() - 1, self.firstDay.getUTCFullYear());
          });
        var $prevIcon = $('<i>',{
          class: 'fa fa-caret-left'
        }).appendTo($prevMonth);
        var $selectDiv = $("<div>").appendTo($caption);
        var $monthSelect = $('<select>', {
            class: "month-select",
          })
          .appendTo($selectDiv)
          .change(function(e){
            self.createMonth($(e.target).val(), $(".year-select").val());
          });
        monthNames.forEach(function(monthName, m){
          var $month = $('<option>',{
            class: "month-option",
            value: m
          })
          .appendTo($monthSelect)
          .text(monthName)
          if (m == self.firstDay.getUTCMonth()){
            $month.prop('selected', true);
          }
        })
        var $yearSelect = $('<select>',{
          class: "year-select"
        })
          .appendTo($selectDiv)
          .change(function(e){
            self.createMonth($('.month-select').val(), $(e.target).val());
          });
        for (y = self.today.getUTCFullYear() - 4; y <= self.today.getUTCFullYear() + 4; y++){
          var $yearOption = $('<option>', {
            class: "year-option",
            value: y
          })
          .appendTo($yearSelect)
          .text(y)
          if (y == self.firstDay.getUTCFullYear()){
            $yearOption.prop('selected', true);
          }
        }

        var $nextMonth = $('<div>',{
          class: "month-option"
        })
          .appendTo($caption)
          .click(function(e){
            self.createMonth(self.firstDay.getUTCMonth() + 1, self.firstDay.getUTCFullYear());
          })
        var $nextIcon = $('<i>',{
            class: 'fa fa-caret-right'
          }).appendTo($nextMonth);

        var $tablehead = $('<tr>',{
            class: "cal-day-of-week-row cal-row"
          })
          .appendTo($table);
        daysOfWeek.forEach(function(day){
          var $th = $('<th>',{
            class: "cal-day-of-week cal-cell"
          })
          .appendTo($tablehead)
          .text(day);
        });
        self.dateArr.forEach(function(week){
          var $tr = $('<tr>', {
            class: "cal-row cal-week-row"
          })
          .appendTo($table);
          week.forEach(function(day){
            var dayDate = new Date(self.firstDay.getFullYear(), self.firstDay.getMonth(), day, 0,0,0,0);
            var classDates = findMatchingClasses(dayDate);
            var tdClasses = 'cal-cell cal-day';
            tdClasses += (day && isToday(dayDate)) ? " cal-today" : "";
            tdClasses += (day && classDates.length > 0) ? " cal-class-day" : "";
            var $td = $('<td>',{
              class: tdClasses
            })
            .appendTo($tr)
            .text(day);
            if (classDates.length > 0){
              $td.click(function(e){
                $('.cal-view-day').removeClass('cal-view-day');
                $(e.target).addClass('cal-view-day');
                var $results = $('.class-results').empty()
                classDates.forEach(function(date){
                  var $resultContainer = $('<div>',{
                    class: "class-result"
                  })
                  .appendTo($results)
                  .click(function(e){
                    $('.modal-form').load('/class_dates/' + date.id + '/edit', function(){
                      $('.selected-result').removeClass('selected-result');
                      if ($(e.target).hasClass('class-result')){
                        $(e.target).addClass('selected-result');
                      } else {
                        $(e.target).parent().addClass('selected-result');
                      }
                      showModalForm();
                    });

                  });
                   date.date.setMinutes(date.date.getMinutes() - new Date().getTimezoneOffset());
                  var hours = date.date.getUTCHours();
                  var formattedTime = date.date.toDateString() + " ";
                  formattedTime += hours % 12 == 0 ? 12 : hours % 12;
                  formattedTime += ':';
                  formattedTime += padNumber(date.date.getMinutes(), 2) + ' ';
                  formattedTime += hours > 11 ? "PM" : "AM";
                  var $resultTitle = $('<h4>',{
                    class: "class-result-title"
                  })
                  .appendTo($resultContainer)
                  .text(formattedTime);

                  var editButton = $
                });

              })
            }
          })
        })
        cal.resize();

      return this;
    },
    resize: function(){
      console.log ($('td').width());
      $('.cal').width($('#render-cal').width()-30);
      $('td').height($('td').width());
    },
    editClass: function(classId, date, time){
      $.ajax({
        method: 'PATCH',
        url: '/api/class_dates/' + classId,
        data:{
          date: date,
          time: time
        },
        success: function(data){
          console.log("EDITED", data)
          date = date.split('-');
          cal.classes = data.classes;
          cal.dateArr = [];
          cal.createMonth(date[1]-1, date[0]);
        },
        error: function(err){
          console.log("ERROR", err);
        }
      })
      console.log(classId, date, time);
    },
    deleteClass: function(classId){
      console.log('delete')
    }
  }

  function padNumber(number, length) {
    number = number.toString();
    while (number.length < length){
      number = "0" + number;
    }
    return number;
  }
  function isToday(datetime){
    return cal.today.getFullYear() === datetime.getFullYear() && cal.today.getMonth() === datetime.getMonth() && cal.today.getDate() === datetime.getDate() ? true :false;
  }

  function findMatchingClasses(datetime){
    var matching = [];
    cal.classes.forEach(function(class_day){
      console.log(class_day.date)
      var classDate = new Date(class_day.date);
      console.log(classDate);
      var classId = class_day.id;
      if(classDate.getFullYear() === datetime.getFullYear() && classDate.getMonth() === datetime.getMonth() && classDate.getDate() === datetime.getDate()){
        matching.push({
          date: classDate,
          id: classId
        });
      }
    })
    return matching;
  }
  $(window).resize(function(e){
    cal.resize();
  });


  $('.clockpicker').clockpicker({
    donetext: "Done",
    autoclose: true
  });
  return cal;
}

function showModalForm(){
  $('.hidden-form').hide();
  $("#class_date_repeat").change(function(){
    $('.pattern-container').toggle();
    console.log($('new_class_pattern').children());
    $('#pattern_timezone_offset').val(new Date().getTimezoneOffset())
  });
  $('.modal').fadeIn('fast');
  var $classTime = $('#class_date_time');
  var $classDate = $('#class_date_date');
  var time = $classTime.val().split(':');
  var date = $classDate.val().split('-');
  var dateTime = new Date(date[0], date[1], date[2], time[0], time[1], 0, 0);
  var offset = dateTime.getTimezoneOffset();
  dateTime = dateTime.setMinutes(offset.getMinutes() - offset);
  $time.val(dateTime.getHours() + ':' + dateTime.getMinutes());
  //http://stackoverflow.com/questions/3514784/what-is-the-best-way-to-detect-a-mobile-device-in-jquery
  if(!( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) ) {
    $('.clockpicker').clockpicker({
      donetext: "Done",
      autoclose: true
    });
  }

  $('#timezone_offset').val(new Date().getTimezoneOffset())
}

$(document).on('turbolinks:load', function() {
  var cal;
  if ($('#render-cal').length > 0){
    cal = calFactory().init();
  }



  $('.close').click(function(){
    $('.modal').fadeOut('fast',function(){
      $('.modal-form').empty()
    });
  });

  $('.modal').hide();
  $('.new-class-button').click(function(e){

    $('.modal-form').load('/courses/' + courseId + '/class_dates/new', function(){
      showModalForm();
      console.log("test");
    });
  });

})
